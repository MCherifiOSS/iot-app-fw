{ } >

{macro} U {data.provider}-{data.manifest.application}{end}
{macro} C {data.path.container}/{U}-root{end}
{macro} A /apps/{data.provider}/{data.manifest.application}{end}
{macro} SYMLINK /bin/ln -sf{end}
{macro} ENSURE-NL {!trail:\n}{\n}{end}{end}

#########################################################################
# This is an automatically generated service file. It was generated for
# {data.manifest.application} of provider {data.provider}.
#
# Generated by {data.path.generator} using the following input:
#   - template: {data.path.template}
#   - manifest: {data.path.manifest}
#

[Unit]
SourcePath={data.path.manifest}
Description={data.manifest.description}

[Service]
{foreach} name:value {in} {data.manifest.environment} {do}
>    Environment={name}={value}
{end}
{ENSURE-NL}
{if-set} data.manifest.groups {then}
>    SupplementaryGroups={foreach}:g{in}{data.manifest.groups}{do}{g} {end}
{end}{\n}
{if-set} data.manifest.container {then}
>    ExecStartPre=/bin/mkdir -p {C}/dev/../sys/../proc/../etc/../usr/../var/../run/../tmp/../home/../root
>    Type=notify
>    ExecStart=/usr/bin/systemd-nspawn \
>....    -M {U} \
>....    -D {C} \
>....    --user={U} \
>....    --overlay=/etc:{A}/etc:/etc \
>....    --overlay-ro=/lib:{A}/lib:/lib \
>....    --overlay-ro=/sbin:{A}/sbin:/sbin \
>....    --overlay-ro=/bin:{A}/bin:/bin \
>....    --overlay-ro=/usr:{A}/usr:/usr \
>....    --overlay=/var:{A}/var:/var \
>....    --tmpfs=/tmp:mode=0755 \
>   {if} ({data.manifest.container.network} == 'VirtualEthernet') {then}
>....    --private-network --network-veth --auto-dhcp \
>        {if-set} data.manifest.container.portmap {then}
>........    -p {data.manifest.container.portmap} \
>        {end}
>   {end}
    {foreach} arg {in} {data.manifest.command} {do}{arg} {end}
{else}
>    Type=simple
>    User={U}
>    Environment=LD_LIBRARY_PATH={A}/lib:{A}/lib64:/lib:/lib64:/usr/lib:/usr/lib64
>    Environment=PATH={A}/bin:/bin:/usr/bin:/sbin:/usr/sbin
>    ExecStart={foreach} arg {in} {data.manifest.command} {do}{arg} {end}
{end}
{ENSURE-NL}
[Install]
WantedBy=applications.target
