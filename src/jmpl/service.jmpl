{ } >

{macro} R {data.path.container}/{data.provider}-{data.manifest.application}{end}
{macro} SYMLINK /bin/ln -sf{end}
{macro} ENSURE-NL {!trail:\n}{\n}{end}{end}

###################################
# This is an automatically generated service file. It was generated for
# {data.manifest.application} of provider {data.provider}.
#
# Generated by {data.path.generator} using the followgin input:
#   - template: {data.path.template}
#   - manifest: {data.path.manifest}
#

[Unit]
SourcePath={data.path.manifest}
Description={data.manifest.description}

[Service]
{foreach} name:value {in} {data.manifest.environment} {do}
>    Environment={name}={value}
{end}

############### testing loopcheck operators ###############
# {foreach} name:value {in} {data.manifest.environment}{do}{value}{!last}name, {end}{end}

# {foreach} name:value {in} {data.manifest.environment} {do}
>   {value}{!last}name, {end}
{end}

# {foreach} key:value {in} {data.manifest.environment} {do}
>     {?first}key [ {end}{key}={value}{!last}key, {else} ] {end}
{end}{\n}
###########################################################

ExecStartPre=/bin/mkdir -p {R}/dev/../sys/../proc/../etc/../usr/../var/../run/../tmp/../home/../root
ExecStartPre={SYMLINK} usr/sbin {R}/sbin
ExecStartPre={SYMLINK} usr/bin {R}/bin
ExecStartPre={SYMLINK} usr/lib {R}/lib
ExecStartPre={SYMLINK} usr/lib64 {R}/lib64

{if-set} data.manifest.container {then}
>    Type=notify
>    ExecStart=/usr/bin/systemd-nspawn \
    -M {data.provider}-{data.manifest.application} \
    -D {R} \
    --user={data.manifest.user} \
    --overlay=/etc:{R}/etc:/etc \
    --overlay-ro=/usr:{R}/usr:/usr \
    --overlay=/var:{R}/var:/var \
    --tmpfs=/tmp:mode=0755 \
>   {if} ({data.manifest.container.network} == 'VirtualEthernet') {then}
>....    --network-veth --auto-dhcp \
>   {end}
    {foreach} arg {in} {data.manifest.command} {do}{arg} {end}
{else}
>    Type=simple
>    User={data.manifest.user}
>    ExecStart={foreach} arg {in} {data.manifest.command} {do}{arg} {end}
{end}
{ENSURE-NL}
[Install]
WantedBy=applications.target
